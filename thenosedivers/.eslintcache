[{"C:\\Projects\\TheShoppies\\thenosedivers\\src\\index.js":"1","C:\\Projects\\TheShoppies\\thenosedivers\\src\\App.js":"2","C:\\Projects\\TheShoppies\\thenosedivers\\src\\reportWebVitals.js":"3","C:\\Projects\\TheShoppies\\thenosedivers\\src\\firebaseconfig.js":"4","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\AuthProvider.js":"5","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\AuthComponent.js":"6","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\Movies.js":"7","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\MovieList.js":"8","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\UserDashboard.js":"9","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\Profile.js":"10","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\Friends.js":"11","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\History.js":"12"},{"size":230,"mtime":1614030248824,"results":"13","hashOfConfig":"14"},{"size":1217,"mtime":1614034016978,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":673,"mtime":1613939590815,"results":"17","hashOfConfig":"14"},{"size":1454,"mtime":1614030820096,"results":"18","hashOfConfig":"14"},{"size":2975,"mtime":1614035156223,"results":"19","hashOfConfig":"14"},{"size":2865,"mtime":1613157249052,"results":"20","hashOfConfig":"14"},{"size":1936,"mtime":1613941010562,"results":"21","hashOfConfig":"14"},{"size":540,"mtime":1613161784171,"results":"22","hashOfConfig":"14"},{"size":160,"mtime":1613936198296,"results":"23","hashOfConfig":"14"},{"size":1861,"mtime":1614029889076,"results":"24","hashOfConfig":"14"},{"size":2626,"mtime":1613944832551,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pvpal5",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},"C:\\Projects\\TheShoppies\\thenosedivers\\src\\index.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\App.js",["54","55","56"],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\reportWebVitals.js",[],["57","58"],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\firebaseconfig.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\AuthProvider.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\AuthComponent.js",["59","60","61"],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\Movies.js",["62","63","64"],"import \"../styles/Movies.scss\";\r\nimport { auth, db } from \"../firebaseconfig\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { UserContext } from \"./AuthProvider\";\r\nimport MovieList from \"./MovieList\";\r\n\r\nfunction Movies(props) {\r\n  const { toggle } = props;\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [movieResults, setMovieResults] = useState({});\r\n  const [history, setHistory] = useState({});\r\n  const { userRef, dbRef } = useContext(UserContext);\r\n\r\n  const rateMovie = function (e) {\r\n    const movieID = e.target.parentElement.id;\r\n    const movieRating = e.target.value;\r\n    /*\r\n    const docRef = await dbRef.get();\r\n    const docHistoryRef = await docRef.data();\r\n    var newRatings = await docHistoryRef.ratings;\r\n    newRatings[movieID] = movieRating;\r\n    */\r\n    console.log(movieID, movieRating);\r\n    dbRef\r\n      .update({ [`ratings.${movieID}`]: parseInt(movieRating) })\r\n      .then(console.log(\"updated\", movieRating))\r\n      .then(updateHistory(movieID, movieRating))\r\n      .catch((err) => console.error(\"updating history failed\", err));\r\n  };\r\n\r\n  const updateHistory = function (id, rating) {\r\n    const newHistory = history;\r\n    newHistory[id] = parseInt(rating);\r\n    setHistory(newHistory);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchText !== \"\") {\r\n      fetch(\"https://www.omdbapi.com?apikey=3fe96115&s=\" + searchText)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setMovieResults(data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    console.log(history);\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    //try to achieve componentDidMonut\r\n    //but wait for dbRef is ready from null to firestore value\r\n    if(dbRef){\r\n      dbRef.get().then((data) => {\r\n        setHistory(data.data().ratings);\r\n      });\r\n    }\r\n  }, [dbRef]);\r\n\r\n  return (\r\n    <section className=\"MovieComponent\">\r\n      <button id=\"AuthToggle\" onClick={toggle}>\r\n        {userRef ? \"Manage Account\" : \"Join Now\"}\r\n      </button>\r\n      <div className=\"MovieSearchLanding\">\r\n        <h1 id=\"title\">\r\n          Do you have similar taste in movie?\r\n          <br />\r\n          Let's find out.\r\n        </h1>\r\n        <h4 id=\"prompt\">The ultimate movie recommender among friends.</h4>\r\n        <input\r\n          id=\"searchText\"\r\n          onChange={(e) => {\r\n            setSearchText(e.target.value);\r\n          }}\r\n          placeholder=\"Search a movie\"\r\n        ></input>\r\n      </div>\r\n      <div className=\"MovieResults\">\r\n        {movieResults.Response === \"True\" ? (\r\n          <MovieList\r\n            movies={movieResults}\r\n            rateMovie={rateMovie}\r\n            history={history}\r\n          />\r\n        ) : (\r\n          <h1>No Results</h1>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\MovieList.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\UserDashboard.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\Profile.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\Friends.js",["65","66","67"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../AuthProvider\";\r\nimport { auth, db } from \"../../firebaseconfig\";\r\n\r\nfunction Friends() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { userRef, dbRef } = useContext(UserContext);\r\n\r\n  const findUser = async function () {\r\n    const docRef = await db\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", searchText)\r\n      .get();\r\n    const results = [];\r\n    docRef.forEach((doc) => {\r\n      results.push({\r\n        id: doc.id,\r\n        history: doc.data().ratings,\r\n        name: doc.data().displayname,\r\n        email: doc.data().email\r\n      });\r\n    });\r\n    console.log(results);\r\n    setSearchResults(results);\r\n  };\r\n\r\n  const addFriend = function (userID){\r\n    dbRef\r\n      .update({ [`friends.${userID}`]: false })\r\n      .then(console.log(\"added\", userID))\r\n      .then(console.log(\"send friend request till true\"))\r\n      .catch((err) => console.error(\"updating history failed\", err));\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"dashFriends\">\r\n      <div className=\"dashSearchFriend\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setSearchText(e.target.value);\r\n          }}\r\n          placeholder=\"Enter User Email\"\r\n        />\r\n        <ul className=\"dashSearchResults\">\r\n          {searchResults.length !== 0 &&\r\n            searchResults.map((user) => (\r\n              <li key={user.id}>\r\n                <b>{user.name}</b>\r\n                <br />\r\n                <i>{user.email}</i>\r\n                <span onClick={() => addFriend(user.id)}>ADD</span>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n        <button onClick={() => findUser()}>Search</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Friends;\r\n","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\History.js",["68"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { UserContext } from \"../AuthProvider\";\r\n\r\nfunction History() {\r\n  const { userRef, dbRef } = useContext(UserContext);\r\n  const [userHistory, setUserHistory] = useState([]);\r\n\r\n  const fetchHistory = async function () {\r\n    if (userRef && dbRef) {\r\n      const doc = await dbRef.get();\r\n      if (doc.exists) {\r\n        console.log(doc.data().ratings);\r\n        fetchMovieInfo(doc.data().ratings);\r\n      }\r\n    } else {\r\n      console.error(\"user or user does not exists!\");\r\n    }\r\n  };\r\n\r\n  const fetchMovieInfo = function(ratings){\r\n    console.log(ratings);\r\n    for(const [key, value] of Object.entries(ratings)){\r\n      fetch(\"https://www.omdbapi.com?apikey=3fe96115&i=\" + key)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const temp = {\r\n          Title: data.Title,\r\n          Type: data.Type,\r\n          Year: data.Year,\r\n          Rating: value\r\n        };\r\n        //setUserHistory([...userHistory, temp]);\r\n        //\r\n        var table = document.getElementById(\"dashHistoryTable\");\r\n        var row = table.insertRow();\r\n        var cellTitle = row.insertCell();\r\n        var cellType = row.insertCell();\r\n        var cellYear = row.insertCell();\r\n        var cellRating = row.insertCell();\r\n        cellTitle.innerHTML = temp.Title;\r\n        cellType.innerHTML = temp.Type;\r\n        cellYear.innerHTML = temp.Year;\r\n        cellRating.innerHTML = temp.Rating;\r\n      })\r\n      .catch((err) => console.error(err));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  });\r\n  return (\r\n    <div className=\"dashHistory\">\r\n      <div className=\"dashHistoryOverview\">\r\n        <h1>My History</h1>\r\n        <div id=\"overview\">\r\n          <div>You have rated x movies</div>\r\n          <div>x % of them are ? category</div>\r\n          <div>IDK what to say next</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dashHistoryList\">\r\n        <table id=\"dashHistoryTable\">\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Type</th>\r\n            <th>Year</th>\r\n            <th onClick={fetchHistory}>Rating</th>\r\n          </tr>\r\n          {userHistory !== [] ? (\r\n            userHistory.map((movie) => (\r\n              <tr>\r\n                <tb>{movie.Title}</tb>\r\n                <tb>{movie.Type}</tb>\r\n                <tb>{movie.Year}</tb>\r\n                <tb>{movie.Rating}</tb>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>You dont have any ratings. Got rate a movie!</tr>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n",{"ruleId":"69","severity":1,"message":"70","line":3,"column":16,"nodeType":"71","messageId":"72","endLine":3,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":3,"column":27,"nodeType":"71","messageId":"72","endLine":3,"endColumn":37},{"ruleId":"69","severity":1,"message":"74","line":30,"column":9,"nodeType":"71","messageId":"72","endLine":30,"endColumn":16},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"69","severity":1,"message":"79","line":2,"column":16,"nodeType":"71","messageId":"72","endLine":2,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":3,"column":17,"nodeType":"71","messageId":"72","endLine":3,"endColumn":26},{"ruleId":"69","severity":1,"message":"80","line":12,"column":22,"nodeType":"71","messageId":"72","endLine":12,"endColumn":27},{"ruleId":"69","severity":1,"message":"81","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"79","line":2,"column":16,"nodeType":"71","messageId":"72","endLine":2,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":48,"column":6,"nodeType":"84","endLine":48,"endColumn":18,"suggestions":"85"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":39,"nodeType":"71","messageId":"72","endLine":1,"endColumn":48},{"ruleId":"69","severity":1,"message":"81","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"86","line":8,"column":11,"nodeType":"71","messageId":"72","endLine":8,"endColumn":18},{"ruleId":"69","severity":1,"message":"87","line":6,"column":23,"nodeType":"71","messageId":"72","endLine":6,"endColumn":37},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'fetcher' is assigned a value but never used.","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"'db' is defined but never used.","'dbRef' is assigned a value but never used.","'auth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'userRef' is assigned a value but never used.","'setUserHistory' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [history, searchText]",{"range":"93","text":"94"},[1620,1632],"[history, searchText]"]