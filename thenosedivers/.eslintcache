[{"C:\\Projects\\TheShoppies\\thenosedivers\\src\\index.js":"1","C:\\Projects\\TheShoppies\\thenosedivers\\src\\App.js":"2","C:\\Projects\\TheShoppies\\thenosedivers\\src\\reportWebVitals.js":"3","C:\\Projects\\TheShoppies\\thenosedivers\\src\\firebaseconfig.js":"4","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\AuthProvider.js":"5","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\AuthComponent.js":"6","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\Movies.js":"7","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\MovieList.js":"8","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\UserDashboard.js":"9","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\Profile.js":"10","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\Friends.js":"11","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\History.js":"12"},{"size":511,"mtime":1611772654462,"results":"13","hashOfConfig":"14"},{"size":1013,"mtime":1611946698480,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":673,"mtime":1613939590815,"results":"17","hashOfConfig":"14"},{"size":1650,"mtime":1613936936398,"results":"18","hashOfConfig":"14"},{"size":3209,"mtime":1613941145397,"results":"19","hashOfConfig":"14"},{"size":2865,"mtime":1613157249052,"results":"20","hashOfConfig":"14"},{"size":1936,"mtime":1613941010562,"results":"21","hashOfConfig":"14"},{"size":540,"mtime":1613161784171,"results":"22","hashOfConfig":"14"},{"size":160,"mtime":1613936198296,"results":"23","hashOfConfig":"14"},{"size":1861,"mtime":1613940313617,"results":"24","hashOfConfig":"14"},{"size":2626,"mtime":1613944832551,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pvpal5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\TheShoppies\\thenosedivers\\src\\index.js",[],["55","56"],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\App.js",["57","58","59","60","61"],"import \"./styles/App.scss\";\nimport firebase from \"firebase/app\";\nimport db from \"./firebaseconfig\";\nimport React, { useState, useContext } from \"react\";\nimport AuthComponent from \"./components/AuthComponent\";\nimport UserDashboard from \"./components/UserDashboard\";\nimport AuthProvider from \"./components/AuthProvider\";\nimport { UserContext } from \"./components/AuthProvider\";\nimport Movies from \"./components/Movies\";\n\nfunction App() {\n  const { userRef, dbRef } = useContext(UserContext);\n\n  const fetch = function (prop) {\n    console.log(prop.uid);\n    console.log(userRef, dbRef);\n  };\n  const closeAuthComponent = function () {\n    document.getElementById(\"AuthComponent\").style.height = \"0\";\n  };\n  const openAuthComponent = function () {\n    document.getElementById(\"AuthComponent\").style.height = \"100%\";\n  };\n  return (\n    <AuthProvider>\n      <AuthComponent toggle={closeAuthComponent}></AuthComponent>\n      <Movies toggle={openAuthComponent}></Movies>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","C:\\Projects\\TheShoppies\\thenosedivers\\src\\reportWebVitals.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\firebaseconfig.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\AuthProvider.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\AuthComponent.js",["62","63"],"import '../styles/AuthComponent.scss';\r\nimport { auth, db } from '../firebaseconfig';\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from './AuthProvider';\r\nimport UserDashboard from './UserDashboard';\r\nfunction AuthComponent(props) {\r\n    const { toggle } = props;\r\n    const [hasAccount, setHasAccount] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [dashboardRoute, setDashboardRoute] = useState('profile');\r\n    const { userRef, dbRef } = useContext(UserContext);\r\n\r\n    const checkAuth = () => {\r\n        console.log('signin');\r\n        auth.signInWithEmailAndPassword(username, password).catch(\r\n            (error) => console.log(error)\r\n        );\r\n        toggle();\r\n    };\r\n\r\n    const toggleAuth = function () {\r\n        toggle();\r\n    }\r\n\r\n    const signUp = () => {\r\n        console.log('signup');\r\n        auth.createUserWithEmailAndPassword(username, password).catch(\r\n            (error) => console.log(error)\r\n        ).then(\r\n            u => console.log(u)\r\n        );\r\n        toggle();\r\n    };\r\n\r\n    const signOut = function () {\r\n        auth.signOut();\r\n    }\r\n\r\n    const checkData = function () {\r\n        if (userRef && dbRef) {\r\n            console.log(userRef);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"AuthComponent\" id=\"AuthComponent\">\r\n            {(userRef)\r\n                ? (<div className=\"UserDashboard\">\r\n                    <div className=\"dashboardNav\">\r\n                        <span id=\"closeAuth\" onClick={toggleAuth}></span>\r\n                        <button onClick={() => setDashboardRoute('profile')}>PROFILE</button>\r\n                        <button onClick={() => setDashboardRoute('friends')}>FRIENDS</button>\r\n                        <button onClick={() => signOut}>OUT</button>\r\n                        <button onClick={() => checkData}>CEHCK</button>\r\n                        <button onClick={() => setDashboardRoute('history')}>HISTORY</button>\r\n                    </div>\r\n                    <UserDashboard msg={dashboardRoute}></UserDashboard>\r\n                </div>)\r\n                : (<div className=\"AuthForm\">\r\n                    <span id=\"closeAuth\" onClick={toggleAuth}></span>\r\n                    <h1>{(hasAccount) ? <>Welcome<br />Back</> : <>Create<br />Account</>}</h1>\r\n                    <input type=\"text\" value={username} placeholder=\"Email\" onChange={(e) => setUsername(e.target.value)} />\r\n                    <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    <button onClick={(hasAccount) ? checkAuth.bind(this) : signUp.bind(this)}>{(hasAccount) ? \"Sign In\" : \"Sign Up\"}</button>\r\n                    {\r\n                        (hasAccount)\r\n                            ? <p>Don't have Account? <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span></p>\r\n                            : <p>Already a Member? <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span></p>\r\n                    }\r\n                </div>)}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default AuthComponent;\r\n","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\Movies.js",["64","65","66"],"import \"../styles/Movies.scss\";\r\nimport { auth, db } from \"../firebaseconfig\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { UserContext } from \"./AuthProvider\";\r\nimport MovieList from \"./MovieList\";\r\n\r\nfunction Movies(props) {\r\n  const { toggle } = props;\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [movieResults, setMovieResults] = useState({});\r\n  const [history, setHistory] = useState({});\r\n  const { userRef, dbRef } = useContext(UserContext);\r\n\r\n  const rateMovie = function (e) {\r\n    const movieID = e.target.parentElement.id;\r\n    const movieRating = e.target.value;\r\n    /*\r\n    const docRef = await dbRef.get();\r\n    const docHistoryRef = await docRef.data();\r\n    var newRatings = await docHistoryRef.ratings;\r\n    newRatings[movieID] = movieRating;\r\n    */\r\n    console.log(movieID, movieRating);\r\n    dbRef\r\n      .update({ [`ratings.${movieID}`]: parseInt(movieRating) })\r\n      .then(console.log(\"updated\", movieRating))\r\n      .then(updateHistory(movieID, movieRating))\r\n      .catch((err) => console.error(\"updating history failed\", err));\r\n  };\r\n\r\n  const updateHistory = function (id, rating) {\r\n    const newHistory = history;\r\n    newHistory[id] = parseInt(rating);\r\n    setHistory(newHistory);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchText !== \"\") {\r\n      fetch(\"https://www.omdbapi.com?apikey=3fe96115&s=\" + searchText)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setMovieResults(data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    console.log(history);\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    //try to achieve componentDidMonut\r\n    //but wait for dbRef is ready from null to firestore value\r\n    if(dbRef){\r\n      dbRef.get().then((data) => {\r\n        setHistory(data.data().ratings);\r\n      });\r\n    }\r\n  }, [dbRef]);\r\n\r\n  return (\r\n    <section className=\"MovieComponent\">\r\n      <button id=\"AuthToggle\" onClick={toggle}>\r\n        {userRef ? \"Manage Account\" : \"Join Now\"}\r\n      </button>\r\n      <div className=\"MovieSearchLanding\">\r\n        <h1 id=\"title\">\r\n          Do you have similar taste in movie?\r\n          <br />\r\n          Let's find out.\r\n        </h1>\r\n        <h4 id=\"prompt\">The ultimate movie recommender among friends.</h4>\r\n        <input\r\n          id=\"searchText\"\r\n          onChange={(e) => {\r\n            setSearchText(e.target.value);\r\n          }}\r\n          placeholder=\"Search a movie\"\r\n        ></input>\r\n      </div>\r\n      <div className=\"MovieResults\">\r\n        {movieResults.Response === \"True\" ? (\r\n          <MovieList\r\n            movies={movieResults}\r\n            rateMovie={rateMovie}\r\n            history={history}\r\n          />\r\n        ) : (\r\n          <h1>No Results</h1>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\MovieList.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\UserDashboard.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\Profile.js",[],"C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\Friends.js",["67","68","69"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../AuthProvider\";\r\nimport { auth, db } from \"../../firebaseconfig\";\r\n\r\nfunction Friends() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const { userRef, dbRef } = useContext(UserContext);\r\n\r\n  const findUser = async function () {\r\n    const docRef = await db\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", searchText)\r\n      .get();\r\n    const results = [];\r\n    docRef.forEach((doc) => {\r\n      results.push({\r\n        id: doc.id,\r\n        history: doc.data().ratings,\r\n        name: doc.data().displayname,\r\n        email: doc.data().email\r\n      });\r\n    });\r\n    console.log(results);\r\n    setSearchResults(results);\r\n  };\r\n\r\n  const addFriend = function (userID){\r\n    dbRef\r\n      .update({ [`friends.${userID}`]: false })\r\n      .then(console.log(\"added\", userID))\r\n      .then(console.log(\"send friend request till true\"))\r\n      .catch((err) => console.error(\"updating history failed\", err));\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"dashFriends\">\r\n      <div className=\"dashSearchFriend\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setSearchText(e.target.value);\r\n          }}\r\n          placeholder=\"Enter User Email\"\r\n        />\r\n        <ul className=\"dashSearchResults\">\r\n          {searchResults.length !== 0 &&\r\n            searchResults.map((user) => (\r\n              <li key={user.id}>\r\n                <b>{user.name}</b>\r\n                <br />\r\n                <i>{user.email}</i>\r\n                <span onClick={() => addFriend(user.id)}>ADD</span>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n        <button onClick={() => findUser()}>Search</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Friends;\r\n","C:\\Projects\\TheShoppies\\thenosedivers\\src\\components\\dashboard\\History.js",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":10},{"ruleId":"75","severity":1,"message":"80","line":4,"column":17,"nodeType":"77","messageId":"78","endLine":4,"endColumn":25},{"ruleId":"75","severity":1,"message":"81","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":21},{"ruleId":"75","severity":1,"message":"82","line":14,"column":9,"nodeType":"77","messageId":"78","endLine":14,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":2,"column":16,"nodeType":"77","messageId":"78","endLine":2,"endColumn":18},{"ruleId":"75","severity":1,"message":"83","line":3,"column":17,"nodeType":"77","messageId":"78","endLine":3,"endColumn":26},{"ruleId":"75","severity":1,"message":"84","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":2,"column":16,"nodeType":"77","messageId":"78","endLine":2,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":48,"column":6,"nodeType":"87","endLine":48,"endColumn":18,"suggestions":"88"},{"ruleId":"75","severity":1,"message":"83","line":1,"column":39,"nodeType":"77","messageId":"78","endLine":1,"endColumn":48},{"ruleId":"75","severity":1,"message":"84","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"89","line":8,"column":11,"nodeType":"77","messageId":"78","endLine":8,"endColumn":18},{"ruleId":"75","severity":1,"message":"90","line":6,"column":23,"nodeType":"77","messageId":"78","endLine":6,"endColumn":37},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'useState' is defined but never used.","'UserDashboard' is defined but never used.","'fetch' is assigned a value but never used.","'useEffect' is defined but never used.","'auth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["93"],"'userRef' is assigned a value but never used.","'setUserHistory' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [history, searchText]",{"range":"96","text":"97"},[1620,1632],"[history, searchText]"]